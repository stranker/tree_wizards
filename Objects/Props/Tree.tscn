[gd_scene load_steps=5 format=2]

[ext_resource path="res://Objects/Props/Leaves.mesh" type="ArrayMesh" id=1]
[ext_resource path="res://Objects/Props/Trunk.mesh" type="ArrayMesh" id=2]

[sub_resource type="ConcavePolygonShape" id=1]
data = PoolVector3Array( -0.6733, -0.6733, 1, -0.6733, -0.6733, 0.6733, -1, -0.6733, 0.6733, -0.8, 1.1963, -0.8, 0.8, 1.1963, -0.8, 0.8, 1.1963, 0.8, 0.8, 1, 0.8, 1, 1, 1, -1, 1, 1, 0.8, 1, -0.8, 0.8, 1, 0.8, 0.8, 1.1963, 0.8, -0.8, 1, -0.8, 0.8, 1, -0.8, 0.8, 1.1963, -0.8, -0.8, 1, -0.8, -1, 1, -1, 1, 1, -1, -0.8, 1, 0.8, -0.8, 1, -0.8, -0.8, 1.1963, -0.8, 0.8, 1, 0.8, -0.8, 1, 0.8, -0.8, 1.1963, 0.8, -0.6733, -0.6733, 1, -0.6733, -1, 1, -0.6733, -1, 0.6733, -0.6733, -0.6733, 0.6733, -0.6733, -1, 0.6733, -1, -1, 0.6733, -1, -0.6733, 0.6733, -1, -0.6733, -0.6733, -1, 1, 1, 0.6733, -0.6733, 0.6733, 1, -0.6733, 0.6733, 1, -1, 0.6733, 0.6733, -0.6733, 0.6733, 0.6733, -1, 0.6733, 0.6733, -1, 1, 0.6733, -0.6733, 0.6733, 0.6733, -0.6733, 1, 1, -0.6733, 1, 0.6733, -0.6733, 1, -0.6733, -0.6733, 1, 1, 1, 1, -0.6733, -0.6733, -0.6733, -0.6733, -1, -0.6733, -0.6733, -1, -1, -0.6733, -0.6733, -1, 0.6733, -0.6733, -1, -1, 1, -1, -1, -0.6733, -0.6733, -1, -1, -0.6733, -0.6733, -1, -0.6733, 0.6733, -1, -0.6733, -0.6733, -1, 0.6733, 0.6733, -1, 0.6733, -0.6733, -0.6733, -0.6733, -0.6733, -0.6733, -1, -1, -0.6733, -1, 0.6733, -0.6733, -1, 0.6733, -1, -1, 0.6733, -1, -0.6733, 1, -0.6733, -0.6733, 1, -0.6733, 0.6733, 1, 1, -1, 0.6733, -0.6733, -0.6733, 0.6733, -1, -0.6733, 1, -1, -0.6733, 0.6733, -0.6733, -0.6733, 1, -0.6733, -0.6733, 1, -0.6733, -1, -0.6733, -0.6733, 1, -1, -0.6733, 0.6733, -1, -0.6733, 1, -0.8, 1.1963, -0.8, 0.8, 1.1963, 0.8, -0.8, 1.1963, 0.8, 1, 1, 1, 0.8, 1, 0.8, 1, 1, -1, 1, 1, -1, 0.8, 1, 0.8, 0.8, 1, -0.8, 0.8, 1, 0.8, -1, 1, 1, -0.8, 1, 0.8, 0.8, 1, -0.8, 0.8, 1.1963, 0.8, 0.8, 1.1963, -0.8, -0.8, 1, -0.8, 0.8, 1.1963, -0.8, -0.8, 1.1963, -0.8, -1, 1, -1, -0.8, 1, -0.8, -1, 1, 1, -1, 1, 1, -0.8, 1, -0.8, -0.8, 1, 0.8, -0.8, 1, -0.8, 1, 1, -1, 0.8, 1, -0.8, -0.8, 1, 0.8, -0.8, 1.1963, -0.8, -0.8, 1.1963, 0.8, 0.8, 1, 0.8, -0.8, 1.1963, 0.8, 0.8, 1.1963, 0.8, -0.6733, -0.6733, 1, -0.6733, -1, 0.6733, -0.6733, -0.6733, 0.6733, -0.6733, -0.6733, 0.6733, -1, -1, 0.6733, -1, -0.6733, 0.6733, -1, -1, -0.6733, -1, -0.6733, 0.6733, -1, -1, 0.6733, -1, -0.6733, 0.6733, -1, 1, 1, -1, -0.6733, 1, -1, 1, 1, -1, -0.6733, -0.6733, -1, 1, -1, -1, 1, -1, -1, -0.6733, -0.6733, -1, -0.6733, -1, -1, -0.6733, -0.6733, -1, -0.6733, 0.6733, -1, -1, -0.6733, 0.6733, -0.6733, 0.6733, 1, -1, 0.6733, 0.6733, -1, 0.6733, 0.6733, -0.6733, 0.6733, 0.6733, -1, 1, 0.6733, -0.6733, 1, 0.6733, -0.6733, 0.6733, 1, -0.6733, 1, 1, -0.6733, 0.6733, -0.6733, -1, 1, 0.6733, -0.6733, 1, 0.6733, -1, 1, 0.6733, -0.6733, 1, 1, 1, 1, 1, -0.6733, 1, 1, 1, 1, -0.6733, -0.6733, 1, -1, 1, 1, -1, 1, 1, -0.6733, -0.6733, 1, -1, -0.6733, 1, -0.6733, -0.6733, 1, 0.6733, -0.6733, 1, -0.6733, -1, 1, -0.6733, -0.6733, -0.6733, -0.6733, -1, -1, -0.6733, -0.6733, -1, 0.6733, -1, -1, -0.6733, -0.6733, -1, -0.6733, -1, -1, -0.6733, -0.6733, -1, -1, 1, -1, -1, -0.6733, -1, -1, 1, -1, 0.6733, -0.6733, -1, 1, 1, -1, 1, 1, -1, 0.6733, -0.6733, -1, 1, -0.6733, -1, 0.6733, -0.6733, -1, -0.6733, -0.6733, -1, 0.6733, -1, -1, -1, -0.6733, -0.6733, -0.6733, -1, -0.6733, -0.6733, -0.6733, -0.6733, -1, -1, 0.6733, -0.6733, -1, 0.6733, -1, -1, -0.6733, -1, -1, -0.6733, -0.6733, -1, 0.6733, -0.6733, -1, -0.6733, -0.6733, -1, -0.6733, 0.6733, -1, -1, -0.6733, -1, -1, 0.6733, -1, -0.6733, 1, -1, 0.6733, 1, -1, -0.6733, -0.6733, -1, -0.6733, 0.6733, -1, -0.6733, 0.6733, -1, -1, 0.6733, -1, 1, 0.6733, -1, 0.6733, -0.6733, -1, 1, -0.6733, -1, 1, 0.6733, -1, 0.6733, -0.6733, -1, 0.6733, 0.6733, -1, -0.6733, 0.6733, -1, 0.6733, 1, -1, 0.6733, -0.6733, -1, 0.6733, 0.6733, -1, -0.6733, -0.6733, -1, -0.6733, -0.6733, -0.6733, -0.6733, -1, -0.6733, -1, -1, -0.6733, -0.6733, 0.6733, -0.6733, -1, 0.6733, -1, -0.6733, 0.6733, -0.6733, -0.6733, 1, -1, 0.6733, 1, -0.6733, -0.6733, 1, -1, -0.6733, 1, -0.6733, -0.6733, 1, 1, -1, 1, -0.6733, -1, 1, 1, -1, 1, -0.6733, 0.6733, 1, 1, 1, 1, 1, 1, 1, -0.6733, 0.6733, 1, -0.6733, 1, 1, -0.6733, 0.6733, 1, -0.6733, -0.6733, 1, -1, 0.6733, 0.6733, -0.6733, -0.6733, 1, -1, -0.6733, 1, -0.6733, -0.6733, 0.6733, -0.6733, -0.6733, 1, -0.6733, -1, 0.6733, -0.6733, -1 )

[sub_resource type="ConcavePolygonShape" id=2]
data = PoolVector3Array( -1, 1, -1, 1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 1, 1, 1, 1, -1, 1, -1, 1, -1, -1, 1, 1, -1 )

[node name="Tree" type="Spatial"]

[node name="Mesh" type="MeshInstance" parent="."]
transform = Transform( 1.2, 0, 0, 0, 1.2, 0, 0, 0, 1.2, 0, 3.46245, 0 )
use_in_baked_light = true
mesh = ExtResource( 1 )
material/0 = null

[node name="Trunk" type="MeshInstance" parent="Mesh"]
transform = Transform( 0.2, 0, 0, 0, 1, 0, 0, 0, 0.2, 0, -1.90018, 0 )
use_in_baked_light = true
mesh = ExtResource( 2 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="Mesh"]

[node name="CollisionShape" type="CollisionShape" parent="Mesh/StaticBody"]
shape = SubResource( 1 )

[node name="CollisionShape2" type="CollisionShape" parent="Mesh/StaticBody"]
transform = Transform( 0.2, 0, 0, 0, 1, 0, 0, 0, 0.2, 0, -1.90018, 0 )
shape = SubResource( 2 )
