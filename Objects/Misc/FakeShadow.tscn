[gd_scene load_steps=4 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial

export var shadow_size : float = 1
export var activated : bool = false
export var object_movable : bool = false
export (NodePath) var target_node_path

onready var target_node = get_node(target_node_path)

onready var new_mesh : Mesh = $Shadow.mesh.duplicate()
onready var new_mat : SpatialMaterial = new_mesh.material.duplicate()

func _ready():
	$RayCast.add_exception(target_node)
	$Shadow.mesh = new_mesh
	$Shadow.mesh.material = new_mat
	$RayCast.cast_to = Vector3.DOWN * 10
	$Shadow.scale = Vector3.ONE * shadow_size
	global_transform.origin = target_node.global_transform.origin
	pass

func _process(delta):
	if !activated:
		return
	if !object_movable:
		return
	if !target_node:
		return
	if $RayCast.is_colliding():
		if $RayCast.get_collider().is_in_group(\"Map\"):
			var pos : Vector3 = $RayCast.get_collision_point()
			$Shadow.global_transform.origin = pos
			var distance : float =  pos.distance_to(target_node.global_transform.origin)
			var alpha = 0.2 / distance
			new_mat.albedo_color.a = clamp(alpha, 0 , 0.3)
	pass
"

[sub_resource type="SpatialMaterial" id=2]
flags_transparent = true
vertex_color_use_as_albedo = true
albedo_color = Color( 0, 0, 0, 0.235294 )

[sub_resource type="CylinderMesh" id=3]
material = SubResource( 2 )
top_radius = 0.5
bottom_radius = 0.5
height = 0.001

[node name="FakeShadow" type="Spatial"]
script = SubResource( 1 )

[node name="RayCast" type="RayCast" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.745146, 0 )
enabled = true
collision_mask = 4

[node name="Shadow" type="MeshInstance" parent="."]
cast_shadow = 0
mesh = SubResource( 3 )
material/0 = null
